// Code generated by wsdl2go. DO NOT EDIT.

package basichttpbinding_ipublicservices

import (
	"reflect"

	"github.com/YapealAG/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://www.uid.admin.ch/xmlns/uid-wse"

// UsedNameSpaceMap was auto-generated from WSDL.
var UsedNamespaces = map[string]string{
	"tns18": "http://www.uid.admin.ch/xmlns/uid-wse-shared/2",
	"tns23": "http://www.ech.ch/xmlns/eCH-0046/5",
	"tns":   "http://www.uid.admin.ch/xmlns/uid-wse",
	"tns21": "http://www.ech.ch/xmlns/eCH-0098/5",
	"tns20": "http://www.uid.admin.ch/xmlns/uid-wse/5",
	"tns19": "http://www.ech.ch/xmlns/eCH-0097/5",
	"tns26": "http://www.ech.ch/xmlns/eCH-0010/7",
	"tns22": "http://www.ech.ch/xmlns/eCH-0007/6",
	"tns24": "http://www.ech.ch/xmlns/eCH-0116/4",
	"tns17": "http://www.ech.ch/xmlns/eCH-0108/5",
	"tns25": "http://www.ech.ch/xmlns/eCH-0044/4",
}

// NewIPublicServices creates an initializes a IPublicServices.
func NewIPublicServices(cli *soap.Client) IPublicServices {
	return &iPublicServices{cli}
}

// IPublicServices was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type IPublicServices interface {
	// <summary>             Get the core data (Kernmerkmale) of a
	// UID entity by its UID              </summary>
	// <param name="uid">UID of requested UID entity</param>
	//
	//	<returns>The requested UID entity</returns>
	GetByUID(GetByUID *GetByUID) (*GetByUIDResponse, error)

	// <summary>             Returns a data sample to demonstrate
	// the structure of eCH-0108:organisationType. The sample contains
	// all mapped fields. All data is fictional.              </summary>
	//
	//	<returns>Data sample</returns>
	GetOrganisationSample(GetOrganisationSample *GetOrganisationSample) (*GetOrganisationSampleResponse, error)

	// <summary>             Search for UID-Einheiten
	//
	//	</summary>             <param name="searchParameters">Search
	//
	// parameters formated as eCH-0108-3-0f document</param>
	//
	//	<param name="config">Configuration parameters to customize
	//
	// search behaviour</param>             <returns>XML-Document
	// of type uid-wse</returns>
	Search(Search *Search) (*SearchResponse, error)

	// <summary>             Validate a UID              </summary>
	//
	//	<param name="uid">UID to validate. Accepted format:
	//
	// 'CHE123456789' or 'CHE-123.456.789'</param>             <returns>true
	// if the UID exists in the UID register</returns>
	ValidateUID(ValidateUID *ValidateUID) (*ValidateUIDResponse, error)

	// <summary>             Validate a VatNumber              </summary>
	//
	//	<param name="vatNumber">VAT number to validate</param>
	//	<returns>true if exists</returns>
	ValidateVatNumber(ValidateVatNumber *ValidateVatNumber) (*ValidateVatNumberResponse, error)
}

// Date in WSDL format.
type Date string

// AddressCategoryType was auto-generated from WSDL.
type AddressCategoryType string

// Validate validates AddressCategoryType.
func (v AddressCategoryType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CantonAbbreviationType was auto-generated from WSDL.
type CantonAbbreviationType string

// Validate validates CantonAbbreviationType.
func (v CantonAbbreviationType) Validate() bool {
	for _, vv := range []string{
		"ZH",
		"BE",
		"LU",
		"UR",
		"SZ",
		"OW",
		"NW",
		"GL",
		"ZG",
		"FR",
		"SO",
		"BS",
		"BL",
		"SH",
		"AR",
		"AI",
		"SG",
		"GR",
		"AG",
		"TG",
		"TI",
		"VD",
		"VS",
		"NE",
		"GE",
		"JU",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CommercialRegisterEnterpriseTypeType was auto-generated from
// WSDL.
type CommercialRegisterEnterpriseTypeType string

// Validate validates CommercialRegisterEnterpriseTypeType.
func (v CommercialRegisterEnterpriseTypeType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CommercialRegisterEntryStatusType was auto-generated from WSDL.
type CommercialRegisterEntryStatusType string

// Validate validates CommercialRegisterEntryStatusType.
func (v CommercialRegisterEntryStatusType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// CommercialRegisterStatusType was auto-generated from WSDL.
type CommercialRegisterStatusType string

// Validate validates CommercialRegisterStatusType.
func (v CommercialRegisterStatusType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// EmailCategoryType was auto-generated from WSDL.
type EmailCategoryType string

// Validate validates EmailCategoryType.
func (v EmailCategoryType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// FoundationReasonType was auto-generated from WSDL.
type FoundationReasonType string

// Validate validates FoundationReasonType.
func (v FoundationReasonType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// InternetCategoryType was auto-generated from WSDL.
type InternetCategoryType string

// Validate validates InternetCategoryType.
func (v InternetCategoryType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// LiquidationReasonType was auto-generated from WSDL.
type LiquidationReasonType string

// Validate validates LiquidationReasonType.
func (v LiquidationReasonType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// MrMrsType was auto-generated from WSDL.
type MrMrsType string

// Validate validates MrMrsType.
func (v MrMrsType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OrganisationMembershipRoleType was auto-generated from WSDL.
type OrganisationMembershipRoleType string

// Validate validates OrganisationMembershipRoleType.
func (v OrganisationMembershipRoleType) Validate() bool {
	for _, vv := range []string{
		"GroupHead",
		"GroupMember",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// PhoneCategoryType was auto-generated from WSDL.
type PhoneCategoryType string

// Validate validates PhoneCategoryType.
func (v PhoneCategoryType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
		"4",
		"5",
		"6",
		"7",
		"8",
		"9",
		"10",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SearchMode was auto-generated from WSDL.
type SearchMode string

// Validate validates SearchMode.
func (v SearchMode) Validate() bool {
	for _, vv := range []string{
		"Auto",
		"Normal",
		"Fuzzy",
		"FuzzyPerson",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// SexType was auto-generated from WSDL.
type SexType string

// Validate validates SexType.
func (v SexType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UidOrganisationIdCategorieType was auto-generated from WSDL.
type UidOrganisationIdCategorieType string

// Validate validates UidOrganisationIdCategorieType.
func (v UidOrganisationIdCategorieType) Validate() bool {
	for _, vv := range []string{
		"CHE",
		"ADM",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UidregLiquidationReasonType was auto-generated from WSDL.
type UidregLiquidationReasonType string

// Validate validates UidregLiquidationReasonType.
func (v UidregLiquidationReasonType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
		"4",
		"5",
		"6",
		"7",
		"8",
		"9",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UidregOrganisationTypeType was auto-generated from WSDL.
type UidregOrganisationTypeType string

// Validate validates UidregOrganisationTypeType.
func (v UidregOrganisationTypeType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
		"4",
		"5",
		"6",
		"7",
		"8",
		"9",
		"10",
		"11",
		"12",
		"13",
		"14",
		"15",
		"16",
		"17",
		"18",
		"19",
		"99",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UidregPublicStatusType was auto-generated from WSDL.
type UidregPublicStatusType string

// Validate validates UidregPublicStatusType.
func (v UidregPublicStatusType) Validate() bool {
	for _, vv := range []string{
		"0",
		"1",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// UidregStatusEnterpriseDetailType was auto-generated from WSDL.
type UidregStatusEnterpriseDetailType string

// Validate validates UidregStatusEnterpriseDetailType.
func (v UidregStatusEnterpriseDetailType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
		"4",
		"5",
		"6",
		"7",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// VatEntryStatusType was auto-generated from WSDL.
type VatEntryStatusType string

// Validate validates VatEntryStatusType.
func (v VatEntryStatusType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// VatStatusType was auto-generated from WSDL.
type VatStatusType string

// Validate validates VatStatusType.
func (v VatStatusType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ArrayOfOrganisationType was auto-generated from WSDL.
type ArrayOfOrganisationType struct {
	OrganisationType []*OrganisationType `xml:"tns:organisationType,omitempty" json:"tns:organisationType,omitempty" yaml:"tns:organisationType,omitempty"`
}

// GetByUID was auto-generated from WSDL.
type GetByUID struct {
	Uid *UidStructureType `xml:"uid,omitempty" json:"uid,omitempty" yaml:"uid,omitempty"`
}

// GetByUIDResponse was auto-generated from WSDL.
type GetByUIDResponse struct {
	GetByUIDResult *ArrayOfOrganisationType `xml:"GetByUIDResult,omitempty" json:"GetByUIDResult,omitempty" yaml:"GetByUIDResult,omitempty"`
}

// GetOrganisationSample was auto-generated from WSDL.
type GetOrganisationSample struct {
}

// GetOrganisationSampleResponse was auto-generated from WSDL.
type GetOrganisationSampleResponse struct {
	GetOrganisationSampleResult *OrganisationType `xml:"GetOrganisationSampleResult,omitempty" json:"GetOrganisationSampleResult,omitempty" yaml:"GetOrganisationSampleResult,omitempty"`
}

// Search was auto-generated from WSDL.
type Search struct {
	SearchParameters *UidEntityPublicSearchRequest `xml:"searchParameters,omitempty" json:"searchParameters,omitempty" yaml:"searchParameters,omitempty"`
	Config           *SearchConfiguration          `xml:"config,omitempty" json:"config,omitempty" yaml:"config,omitempty"`
}

// SearchResponse was auto-generated from WSDL.
type SearchResponse struct {
	SearchResult *UidEntitySearchResponse `xml:"SearchResult,omitempty" json:"SearchResult,omitempty" yaml:"SearchResult,omitempty"`
}

// ValidateUID was auto-generated from WSDL.
type ValidateUID struct {
	Uid *string `xml:"uid,omitempty" json:"uid,omitempty" yaml:"uid,omitempty"`
}

// ValidateUIDResponse was auto-generated from WSDL.
type ValidateUIDResponse struct {
	ValidateUIDResult bool `xml:"ValidateUIDResult" json:"ValidateUIDResult" yaml:"ValidateUIDResult"`
}

// ValidateVatNumber was auto-generated from WSDL.
type ValidateVatNumber struct {
	VatNumber *string `xml:"vatNumber,omitempty" json:"vatNumber,omitempty" yaml:"vatNumber,omitempty"`
}

// ValidateVatNumberResponse was auto-generated from WSDL.
type ValidateVatNumberResponse struct {
	ValidateVatNumberResult bool `xml:"ValidateVatNumberResult" json:"ValidateVatNumberResult" yaml:"ValidateVatNumberResult"`
}

// AddressInformationType was auto-generated from WSDL.
type AddressInformationType struct {
	AddressLine1        *string      `xml:"tns26:addressLine1,omitempty" json:"tns26:addressLine1,omitempty" yaml:"tns26:addressLine1,omitempty"`
	AddressLine2        *string      `xml:"tns26:addressLine2,omitempty" json:"tns26:addressLine2,omitempty" yaml:"tns26:addressLine2,omitempty"`
	Street              *string      `xml:"tns26:street,omitempty" json:"tns26:street,omitempty" yaml:"tns26:street,omitempty"`
	HouseNumber         *string      `xml:"tns26:houseNumber,omitempty" json:"tns26:houseNumber,omitempty" yaml:"tns26:houseNumber,omitempty"`
	DwellingNumber      *string      `xml:"tns26:dwellingNumber,omitempty" json:"tns26:dwellingNumber,omitempty" yaml:"tns26:dwellingNumber,omitempty"`
	PostOfficeBoxNumber *uint        `xml:"tns26:postOfficeBoxNumber,omitempty" json:"tns26:postOfficeBoxNumber,omitempty" yaml:"tns26:postOfficeBoxNumber,omitempty"`
	PostOfficeBoxText   *string      `xml:"tns26:postOfficeBoxText,omitempty" json:"tns26:postOfficeBoxText,omitempty" yaml:"tns26:postOfficeBoxText,omitempty"`
	Locality            *string      `xml:"tns26:locality,omitempty" json:"tns26:locality,omitempty" yaml:"tns26:locality,omitempty"`
	Town                *string      `xml:"tns26:town,omitempty" json:"tns26:town,omitempty" yaml:"tns26:town,omitempty"`
	Country             *CountryType `xml:"tns26:country,omitempty" json:"tns26:country,omitempty" yaml:"tns26:country,omitempty"`
	ForeignZipCode      *string      `xml:"tns26:foreignZipCode,omitempty" json:"tns26:foreignZipCode,omitempty" yaml:"tns26:foreignZipCode,omitempty"`
	SwissZipCode        uint         `xml:"tns26:swissZipCode" json:"tns26:swissZipCode" yaml:"tns26:swissZipCode"`
	SwissZipCodeAddOn   *string      `xml:"tns26:swissZipCodeAddOn,omitempty" json:"tns26:swissZipCodeAddOn,omitempty" yaml:"tns26:swissZipCodeAddOn,omitempty"`
	SwissZipCodeId      int          `xml:"tns26:swissZipCodeId" json:"tns26:swissZipCodeId" yaml:"tns26:swissZipCodeId"`
}

// AddressSearchType was auto-generated from WSDL.
type AddressSearchType struct {
	AddressLine1        *string                `xml:"tns20:addressLine1,omitempty" json:"tns20:addressLine1,omitempty" yaml:"tns20:addressLine1,omitempty"`
	AddressLine2        *string                `xml:"tns20:addressLine2,omitempty" json:"tns20:addressLine2,omitempty" yaml:"tns20:addressLine2,omitempty"`
	Street              *string                `xml:"tns20:street,omitempty" json:"tns20:street,omitempty" yaml:"tns20:street,omitempty"`
	HouseNumber         *string                `xml:"tns20:houseNumber,omitempty" json:"tns20:houseNumber,omitempty" yaml:"tns20:houseNumber,omitempty"`
	PostOfficeBoxNumber *uint                  `xml:"tns20:postOfficeBoxNumber,omitempty" json:"tns20:postOfficeBoxNumber,omitempty" yaml:"tns20:postOfficeBoxNumber,omitempty"`
	Town                *string                `xml:"tns20:town,omitempty" json:"tns20:town,omitempty" yaml:"tns20:town,omitempty"`
	CountryIdISO2       *string                `xml:"tns20:countryIdISO2,omitempty" json:"tns20:countryIdISO2,omitempty" yaml:"tns20:countryIdISO2,omitempty"`
	SwissZipCode        uint                   `xml:"tns20:swissZipCode" json:"tns20:swissZipCode" yaml:"tns20:swissZipCode"`
	SwissZipCodeAddOn   *string                `xml:"tns20:swissZipCodeAddOn,omitempty" json:"tns20:swissZipCodeAddOn,omitempty" yaml:"tns20:swissZipCodeAddOn,omitempty"`
	MunicipalityId      int                    `xml:"tns20:municipalityId" json:"tns20:municipalityId" yaml:"tns20:municipalityId"`
	CantonAbbreviation  CantonAbbreviationType `xml:"tns20:cantonAbbreviation" json:"tns20:cantonAbbreviation" yaml:"tns20:cantonAbbreviation"`
	EGID                uint                   `xml:"tns20:EGID" json:"tns20:EGID" yaml:"tns20:EGID"`
	ForeignZipCode      *string                `xml:"tns20:foreignZipCode,omitempty" json:"tns20:foreignZipCode,omitempty" yaml:"tns20:foreignZipCode,omitempty"`
}

// AddressType was auto-generated from WSDL.
type AddressType struct {
	PostalAddress        *MailAddressType    `xml:"tns23:postalAddress,omitempty" json:"tns23:postalAddress,omitempty" yaml:"tns23:postalAddress,omitempty"`
	Validity             *DateRangeType      `xml:"tns23:validity,omitempty" json:"tns23:validity,omitempty" yaml:"tns23:validity,omitempty"`
	AddressCategory      AddressCategoryType `xml:"tns23:addressCategory" json:"tns23:addressCategory" yaml:"tns23:addressCategory"`
	OtherAddressCategory *string             `xml:"tns23:otherAddressCategory,omitempty" json:"tns23:otherAddressCategory,omitempty" yaml:"tns23:otherAddressCategory,omitempty"`
}

// BusinessFault was auto-generated from WSDL.
type BusinessFault struct {
	Operation     *string `xml:"tns18:operation,omitempty" json:"tns18:operation,omitempty" yaml:"tns18:operation,omitempty"`
	Error         *string `xml:"tns18:error,omitempty" json:"tns18:error,omitempty" yaml:"tns18:error,omitempty"`
	ErrorDetail   *string `xml:"tns18:errorDetail,omitempty" json:"tns18:errorDetail,omitempty" yaml:"tns18:errorDetail,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *BusinessFault) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:businessFault"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.uid.admin.ch/xmlns/uid-wse-shared/2"
	}
}

// CommercialRegisterInformationSearchType was auto-generated from
// WSDL.
type CommercialRegisterInformationSearchType struct {
	CommercialRegisterStatus          *CommercialRegisterStatusType         `xml:"tns20:commercialRegisterStatus,omitempty" json:"tns20:commercialRegisterStatus,omitempty" yaml:"tns20:commercialRegisterStatus,omitempty"`
	CommercialRegisterEntryStatus     *CommercialRegisterEntryStatusType    `xml:"tns20:commercialRegisterEntryStatus,omitempty" json:"tns20:commercialRegisterEntryStatus,omitempty" yaml:"tns20:commercialRegisterEntryStatus,omitempty"`
	CommercialRegisterEntryDate       *Date                                 `xml:"tns20:commercialRegisterEntryDate,omitempty" json:"tns20:commercialRegisterEntryDate,omitempty" yaml:"tns20:commercialRegisterEntryDate,omitempty"`
	CommercialRegisterLiquidationDate *Date                                 `xml:"tns20:commercialRegisterLiquidationDate,omitempty" json:"tns20:commercialRegisterLiquidationDate,omitempty" yaml:"tns20:commercialRegisterLiquidationDate,omitempty"`
	CommercialRegisterEnterpriseType  *CommercialRegisterEnterpriseTypeType `xml:"tns20:commercialRegisterEnterpriseType,omitempty" json:"tns20:commercialRegisterEnterpriseType,omitempty" yaml:"tns20:commercialRegisterEnterpriseType,omitempty"`
}

// CommercialRegisterInformationType was auto-generated from WSDL.
type CommercialRegisterInformationType struct {
	CommercialRegisterStatus          CommercialRegisterStatusType          `xml:"tns17:commercialRegisterStatus" json:"tns17:commercialRegisterStatus" yaml:"tns17:commercialRegisterStatus"`
	CommercialRegisterEntryStatus     *CommercialRegisterEntryStatusType    `xml:"tns17:commercialRegisterEntryStatus,omitempty" json:"tns17:commercialRegisterEntryStatus,omitempty" yaml:"tns17:commercialRegisterEntryStatus,omitempty"`
	CommercialRegisterNameTranslation *string                               `xml:"tns17:commercialRegisterNameTranslation,omitempty" json:"tns17:commercialRegisterNameTranslation,omitempty" yaml:"tns17:commercialRegisterNameTranslation,omitempty"`
	CommercialRegisterEntryDate       *Date                                 `xml:"tns17:commercialRegisterEntryDate,omitempty" json:"tns17:commercialRegisterEntryDate,omitempty" yaml:"tns17:commercialRegisterEntryDate,omitempty"`
	CommercialRegisterLiquidationDate *Date                                 `xml:"tns17:commercialRegisterLiquidationDate,omitempty" json:"tns17:commercialRegisterLiquidationDate,omitempty" yaml:"tns17:commercialRegisterLiquidationDate,omitempty"`
	CommercialRegisterEnterpriseType  *CommercialRegisterEnterpriseTypeType `xml:"tns17:commercialRegisterEnterpriseType,omitempty" json:"tns17:commercialRegisterEnterpriseType,omitempty" yaml:"tns17:commercialRegisterEnterpriseType,omitempty"`
}

// ContactType was auto-generated from WSDL.
type ContactType struct {
	LocalID  *NamedPersonIdType `xml:"tns23:localID,omitempty" json:"tns23:localID,omitempty" yaml:"tns23:localID,omitempty"`
	Address  []*AddressType     `xml:"tns23:address,omitempty" json:"tns23:address,omitempty" yaml:"tns23:address,omitempty"`
	Email    []*EmailType       `xml:"tns23:email,omitempty" json:"tns23:email,omitempty" yaml:"tns23:email,omitempty"`
	Phone    []*PhoneType       `xml:"tns23:phone,omitempty" json:"tns23:phone,omitempty" yaml:"tns23:phone,omitempty"`
	Internet []*InternetType    `xml:"tns23:internet,omitempty" json:"tns23:internet,omitempty" yaml:"tns23:internet,omitempty"`
}

// CountryType was auto-generated from WSDL.
type CountryType struct {
	CountryId        *int64  `xml:"tns26:countryId,omitempty" json:"tns26:countryId,omitempty" yaml:"tns26:countryId,omitempty"`
	CountryIdISO2    *string `xml:"tns26:countryIdISO2,omitempty" json:"tns26:countryIdISO2,omitempty" yaml:"tns26:countryIdISO2,omitempty"`
	CountryNameShort *string `xml:"tns26:countryNameShort,omitempty" json:"tns26:countryNameShort,omitempty" yaml:"tns26:countryNameShort,omitempty"`
}

// DatePartiallyKnownType was auto-generated from WSDL.
type DatePartiallyKnownType struct {
	Year         *GYear      `xml:"tns21:year,omitempty" json:"tns21:year,omitempty" yaml:"tns21:year,omitempty"`
	YearMonth    *GYearMonth `xml:"tns21:yearMonth,omitempty" json:"tns21:yearMonth,omitempty" yaml:"tns21:yearMonth,omitempty"`
	YearMonthDay Date        `xml:"tns21:yearMonthDay" json:"tns21:yearMonthDay" yaml:"tns21:yearMonthDay"`
}

// DateRangeType was auto-generated from WSDL.
type DateRangeType struct {
	DateFrom *Date `xml:"tns23:dateFrom,omitempty" json:"tns23:dateFrom,omitempty" yaml:"tns23:dateFrom,omitempty"`
	DateTo   *Date `xml:"tns23:dateTo,omitempty" json:"tns23:dateTo,omitempty" yaml:"tns23:dateTo,omitempty"`
}

// DuplicateCandidateType was auto-generated from WSDL.
type DuplicateCandidateType struct {
	Rating                       int                              `xml:"tns20:rating" json:"tns20:rating" yaml:"tns20:rating"`
	Uid                          *UidStructureType                `xml:"tns20:uid,omitempty" json:"tns20:uid,omitempty" yaml:"tns20:uid,omitempty"`
	OrganisationName             *string                          `xml:"tns20:organisationName,omitempty" json:"tns20:organisationName,omitempty" yaml:"tns20:organisationName,omitempty"`
	OrganisationAdditionalName   *string                          `xml:"tns20:organisationAdditionalName,omitempty" json:"tns20:organisationAdditionalName,omitempty" yaml:"tns20:organisationAdditionalName,omitempty"`
	Street                       *string                          `xml:"tns20:street,omitempty" json:"tns20:street,omitempty" yaml:"tns20:street,omitempty"`
	SwissZipCode                 uint                             `xml:"tns20:swissZipCode" json:"tns20:swissZipCode" yaml:"tns20:swissZipCode"`
	Town                         *string                          `xml:"tns20:town,omitempty" json:"tns20:town,omitempty" yaml:"tns20:town,omitempty"`
	UidregStatusEnterpriseDetail UidregStatusEnterpriseDetailType `xml:"tns20:uidregStatusEnterpriseDetail" json:"tns20:uidregStatusEnterpriseDetail" yaml:"tns20:uidregStatusEnterpriseDetail"`
	UidregOrganisationType       UidregOrganisationTypeType       `xml:"tns20:uidregOrganisationType" json:"tns20:uidregOrganisationType" yaml:"tns20:uidregOrganisationType"`
}

// DuplicateFault was auto-generated from WSDL.
type DuplicateFault struct {
	Operation             *string                   `xml:"tns18:operation,omitempty" json:"tns18:operation,omitempty" yaml:"tns18:operation,omitempty"`
	Error                 *string                   `xml:"tns18:error,omitempty" json:"tns18:error,omitempty" yaml:"tns18:error,omitempty"`
	ErrorDetail           *string                   `xml:"tns18:errorDetail,omitempty" json:"tns18:errorDetail,omitempty" yaml:"tns18:errorDetail,omitempty"`
	Candidates            []*DuplicateCandidateType `xml:"tns20:candidates,omitempty" json:"tns20:candidates,omitempty" yaml:"tns20:candidates,omitempty"`
	DuplicateOverrideCode *string                   `xml:"tns20:duplicateOverrideCode,omitempty" json:"tns20:duplicateOverrideCode,omitempty" yaml:"tns20:duplicateOverrideCode,omitempty"`
	TypeAttrXSI           string                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DuplicateFault) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:duplicateFault"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.uid.admin.ch/xmlns/uid-wse/5"
	}
}

// EmailType was auto-generated from WSDL.
type EmailType struct {
	EmailAddress       *string           `xml:"tns23:emailAddress,omitempty" json:"tns23:emailAddress,omitempty" yaml:"tns23:emailAddress,omitempty"`
	Validity           *DateRangeType    `xml:"tns23:validity,omitempty" json:"tns23:validity,omitempty" yaml:"tns23:validity,omitempty"`
	EmailCategory      EmailCategoryType `xml:"tns23:emailCategory" json:"tns23:emailCategory" yaml:"tns23:emailCategory"`
	OtherEmailCategory *string           `xml:"tns23:otherEmailCategory,omitempty" json:"tns23:otherEmailCategory,omitempty" yaml:"tns23:otherEmailCategory,omitempty"`
}

// FoundationType was auto-generated from WSDL.
type FoundationType struct {
	FoundationDate   *DatePartiallyKnownType `xml:"tns21:foundationDate,omitempty" json:"tns21:foundationDate,omitempty" yaml:"tns21:foundationDate,omitempty"`
	FoundationReason *FoundationReasonType   `xml:"tns21:foundationReason,omitempty" json:"tns21:foundationReason,omitempty" yaml:"tns21:foundationReason,omitempty"`
}

// GroupRelationshipType was auto-generated from WSDL.
type GroupRelationshipType struct {
	GroupName                  *string                        `xml:"tns17:groupName,omitempty" json:"tns17:groupName,omitempty" yaml:"tns17:groupName,omitempty"`
	OrganisationMembershipRole OrganisationMembershipRoleType `xml:"tns17:organisationMembershipRole" json:"tns17:organisationMembershipRole" yaml:"tns17:organisationMembershipRole"`
	GroupParticipant           []*string                      `xml:"tns17:groupParticipant,omitempty" json:"tns17:groupParticipant,omitempty" yaml:"tns17:groupParticipant,omitempty"`
}

// InfrastructureFault was auto-generated from WSDL.
type InfrastructureFault struct {
	Operation     *string `xml:"tns18:operation,omitempty" json:"tns18:operation,omitempty" yaml:"tns18:operation,omitempty"`
	Error         *string `xml:"tns18:error,omitempty" json:"tns18:error,omitempty" yaml:"tns18:error,omitempty"`
	ErrorDetail   *string `xml:"tns18:errorDetail,omitempty" json:"tns18:errorDetail,omitempty" yaml:"tns18:errorDetail,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *InfrastructureFault) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:infrastructureFault"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.uid.admin.ch/xmlns/uid-wse-shared/2"
	}
}

// InternetType was auto-generated from WSDL.
type InternetType struct {
	InternetAddress       *string              `xml:"tns23:internetAddress,omitempty" json:"tns23:internetAddress,omitempty" yaml:"tns23:internetAddress,omitempty"`
	Validity              *DateRangeType       `xml:"tns23:validity,omitempty" json:"tns23:validity,omitempty" yaml:"tns23:validity,omitempty"`
	InternetCategory      InternetCategoryType `xml:"tns23:internetCategory" json:"tns23:internetCategory" yaml:"tns23:internetCategory"`
	OtherInternetCategory *string              `xml:"tns23:otherInternetCategory,omitempty" json:"tns23:otherInternetCategory,omitempty" yaml:"tns23:otherInternetCategory,omitempty"`
}

// InvolvedPersonType was auto-generated from WSDL.
type InvolvedPersonType struct {
	Role         *string                 `xml:"tns17:role,omitempty" json:"tns17:role,omitempty" yaml:"tns17:role,omitempty"`
	Vn           *UnsignedLong           `xml:"tns17:vn,omitempty" json:"tns17:vn,omitempty" yaml:"tns17:vn,omitempty"`
	OfficialName *string                 `xml:"tns17:officialName,omitempty" json:"tns17:officialName,omitempty" yaml:"tns17:officialName,omitempty"`
	FirstName    *string                 `xml:"tns17:firstName,omitempty" json:"tns17:firstName,omitempty" yaml:"tns17:firstName,omitempty"`
	DateOfBirth  *DatePartiallyKnownType `xml:"tns17:dateOfBirth,omitempty" json:"tns17:dateOfBirth,omitempty" yaml:"tns17:dateOfBirth,omitempty"`
	Sex          *SexType                `xml:"tns17:sex,omitempty" json:"tns17:sex,omitempty" yaml:"tns17:sex,omitempty"`
}

// LeiRegisterInformationType was auto-generated from WSDL.
type LeiRegisterInformationType struct {
	InitialRegistrationDate Date   `xml:"tns17:initialRegistrationDate" json:"tns17:initialRegistrationDate" yaml:"tns17:initialRegistrationDate"`
	ExpirationDate          *Date  `xml:"tns17:expirationDate,omitempty" json:"tns17:expirationDate,omitempty" yaml:"tns17:expirationDate,omitempty"`
	RegistrationStatus      string `xml:"tns17:registrationStatus" json:"tns17:registrationStatus" yaml:"tns17:registrationStatus"`
}

// LiquidationType was auto-generated from WSDL.
type LiquidationType struct {
	LiquidationDate      *DatePartiallyKnownType `xml:"tns21:liquidationDate,omitempty" json:"tns21:liquidationDate,omitempty" yaml:"tns21:liquidationDate,omitempty"`
	LiquidationStartDate *DatePartiallyKnownType `xml:"tns21:liquidationStartDate,omitempty" json:"tns21:liquidationStartDate,omitempty" yaml:"tns21:liquidationStartDate,omitempty"`
	LiquidationReason    *LiquidationReasonType  `xml:"tns21:liquidationReason,omitempty" json:"tns21:liquidationReason,omitempty" yaml:"tns21:liquidationReason,omitempty"`
}

// MailAddressType was auto-generated from WSDL.
type MailAddressType struct {
	AddressInformation *AddressInformationType          `xml:"tns26:addressInformation,omitempty" json:"tns26:addressInformation,omitempty" yaml:"tns26:addressInformation,omitempty"`
	Organisation       *OrganisationMailAddressInfoType `xml:"tns26:organisation,omitempty" json:"tns26:organisation,omitempty" yaml:"tns26:organisation,omitempty"`
	Person             *PersonMailAddressInfoType       `xml:"tns26:person,omitempty" json:"tns26:person,omitempty" yaml:"tns26:person,omitempty"`
}

// NamedOrganisationIdType was auto-generated from WSDL.
type NamedOrganisationIdType struct {
	OrganisationIdCategory *string `xml:"tns19:organisationIdCategory,omitempty" json:"tns19:organisationIdCategory,omitempty" yaml:"tns19:organisationIdCategory,omitempty"`
	OrganisationId         *string `xml:"tns19:organisationId,omitempty" json:"tns19:organisationId,omitempty" yaml:"tns19:organisationId,omitempty"`
}

// NamedPersonIdType was auto-generated from WSDL.
type NamedPersonIdType struct {
	PersonIdCategory *string `xml:"tns25:personIdCategory,omitempty" json:"tns25:personIdCategory,omitempty" yaml:"tns25:personIdCategory,omitempty"`
	PersonId         *string `xml:"tns25:personId,omitempty" json:"tns25:personId,omitempty" yaml:"tns25:personId,omitempty"`
}

// OrganisationAddressType was auto-generated from WSDL.
type OrganisationAddressType struct {
	AddressCategory     *string                `xml:"tns21:addressCategory,omitempty" json:"tns21:addressCategory,omitempty" yaml:"tns21:addressCategory,omitempty"`
	AddressLine1        *string                `xml:"tns21:addressLine1,omitempty" json:"tns21:addressLine1,omitempty" yaml:"tns21:addressLine1,omitempty"`
	AddressLine2        *string                `xml:"tns21:addressLine2,omitempty" json:"tns21:addressLine2,omitempty" yaml:"tns21:addressLine2,omitempty"`
	Street              *string                `xml:"tns21:street,omitempty" json:"tns21:street,omitempty" yaml:"tns21:street,omitempty"`
	HouseNumber         *string                `xml:"tns21:houseNumber,omitempty" json:"tns21:houseNumber,omitempty" yaml:"tns21:houseNumber,omitempty"`
	DwellingNumber      *string                `xml:"tns21:dwellingNumber,omitempty" json:"tns21:dwellingNumber,omitempty" yaml:"tns21:dwellingNumber,omitempty"`
	PostOfficeBoxNumber *uint                  `xml:"tns21:postOfficeBoxNumber,omitempty" json:"tns21:postOfficeBoxNumber,omitempty" yaml:"tns21:postOfficeBoxNumber,omitempty"`
	Town                *string                `xml:"tns21:town,omitempty" json:"tns21:town,omitempty" yaml:"tns21:town,omitempty"`
	CountryIdISO2       *string                `xml:"tns21:countryIdISO2,omitempty" json:"tns21:countryIdISO2,omitempty" yaml:"tns21:countryIdISO2,omitempty"`
	DeliverableYesNo    *bool                  `xml:"tns21:deliverableYesNo,omitempty" json:"tns21:deliverableYesNo,omitempty" yaml:"tns21:deliverableYesNo,omitempty"`
	DateOfLastCheck     *Date                  `xml:"tns21:dateOfLastCheck,omitempty" json:"tns21:dateOfLastCheck,omitempty" yaml:"tns21:dateOfLastCheck,omitempty"`
	SwissZipCode        uint                   `xml:"tns21:swissZipCode" json:"tns21:swissZipCode" yaml:"tns21:swissZipCode"`
	SwissZipCodeAddOn   *string                `xml:"tns21:swissZipCodeAddOn,omitempty" json:"tns21:swissZipCodeAddOn,omitempty" yaml:"tns21:swissZipCodeAddOn,omitempty"`
	MunicipalityId      int                    `xml:"tns21:municipalityId" json:"tns21:municipalityId" yaml:"tns21:municipalityId"`
	CantonAbbreviation  CantonAbbreviationType `xml:"tns21:cantonAbbreviation" json:"tns21:cantonAbbreviation" yaml:"tns21:cantonAbbreviation"`
	EGID                uint                   `xml:"tns21:EGID" json:"tns21:EGID" yaml:"tns21:EGID"`
	ForeignZipCode      *string                `xml:"tns21:foreignZipCode,omitempty" json:"tns21:foreignZipCode,omitempty" yaml:"tns21:foreignZipCode,omitempty"`
}

// OrganisationIdentificationType was auto-generated from WSDL.
type OrganisationIdentificationType struct {
	Uid                        *UidStructureType          `xml:"tns19:uid,omitempty" json:"tns19:uid,omitempty" yaml:"tns19:uid,omitempty"`
	LocalOrganisationId        *NamedOrganisationIdType   `xml:"tns19:localOrganisationId,omitempty" json:"tns19:localOrganisationId,omitempty" yaml:"tns19:localOrganisationId,omitempty"`
	OtherOrganisationId        []*NamedOrganisationIdType `xml:"tns19:OtherOrganisationId,omitempty" json:"tns19:OtherOrganisationId,omitempty" yaml:"tns19:OtherOrganisationId,omitempty"`
	OrganisationName           *string                    `xml:"tns19:organisationName,omitempty" json:"tns19:organisationName,omitempty" yaml:"tns19:organisationName,omitempty"`
	OrganisationLegalName      *string                    `xml:"tns19:organisationLegalName,omitempty" json:"tns19:organisationLegalName,omitempty" yaml:"tns19:organisationLegalName,omitempty"`
	OrganisationAdditionalName *string                    `xml:"tns19:organisationAdditionalName,omitempty" json:"tns19:organisationAdditionalName,omitempty" yaml:"tns19:organisationAdditionalName,omitempty"`
	LegalForm                  *string                    `xml:"tns19:legalForm,omitempty" json:"tns19:legalForm,omitempty" yaml:"tns19:legalForm,omitempty"`
}

// OrganisationMailAddressInfoType was auto-generated from WSDL.
type OrganisationMailAddressInfoType struct {
	OrganisationName       *string    `xml:"tns26:organisationName,omitempty" json:"tns26:organisationName,omitempty" yaml:"tns26:organisationName,omitempty"`
	OrganisationNameAddOn1 *string    `xml:"tns26:organisationNameAddOn1,omitempty" json:"tns26:organisationNameAddOn1,omitempty" yaml:"tns26:organisationNameAddOn1,omitempty"`
	OrganisationNameAddOn2 *string    `xml:"tns26:organisationNameAddOn2,omitempty" json:"tns26:organisationNameAddOn2,omitempty" yaml:"tns26:organisationNameAddOn2,omitempty"`
	MrMrs                  *MrMrsType `xml:"tns26:mrMrs,omitempty" json:"tns26:mrMrs,omitempty" yaml:"tns26:mrMrs,omitempty"`
	Title                  *string    `xml:"tns26:title,omitempty" json:"tns26:title,omitempty" yaml:"tns26:title,omitempty"`
	FirstName              *string    `xml:"tns26:firstName,omitempty" json:"tns26:firstName,omitempty" yaml:"tns26:firstName,omitempty"`
	LastName               *string    `xml:"tns26:lastName,omitempty" json:"tns26:lastName,omitempty" yaml:"tns26:lastName,omitempty"`
}

// OrganisationType was auto-generated from WSDL.
type OrganisationType struct {
	OrganisationIdentification *OrganisationIdentificationType `xml:"tns21:organisationIdentification,omitempty" json:"tns21:organisationIdentification,omitempty" yaml:"tns21:organisationIdentification,omitempty"`
	UidBrancheText             *string                         `xml:"tns21:uidBrancheText,omitempty" json:"tns21:uidBrancheText,omitempty" yaml:"tns21:uidBrancheText,omitempty"`
	NOGACode                   *string                         `xml:"tns21:NOGACode,omitempty" json:"tns21:NOGACode,omitempty" yaml:"tns21:NOGACode,omitempty"`
	Foundation                 *FoundationType                 `xml:"tns21:foundation,omitempty" json:"tns21:foundation,omitempty" yaml:"tns21:foundation,omitempty"`
	Liquidation                *LiquidationType                `xml:"tns21:liquidation,omitempty" json:"tns21:liquidation,omitempty" yaml:"tns21:liquidation,omitempty"`
	Address                    []*OrganisationAddressType      `xml:"tns21:address,omitempty" json:"tns21:address,omitempty" yaml:"tns21:address,omitempty"`
	Contact                    *ContactType                    `xml:"tns21:contact,omitempty" json:"tns21:contact,omitempty" yaml:"tns21:contact,omitempty"`
	LanguageOfCorrespondance   *string                         `xml:"tns21:languageOfCorrespondance,omitempty" json:"tns21:languageOfCorrespondance,omitempty" yaml:"tns21:languageOfCorrespondance,omitempty"`
}

// PersonMailAddressInfoType was auto-generated from WSDL.
type PersonMailAddressInfoType struct {
	MrMrs     *MrMrsType `xml:"tns26:mrMrs,omitempty" json:"tns26:mrMrs,omitempty" yaml:"tns26:mrMrs,omitempty"`
	Title     *string    `xml:"tns26:title,omitempty" json:"tns26:title,omitempty" yaml:"tns26:title,omitempty"`
	FirstName *string    `xml:"tns26:firstName,omitempty" json:"tns26:firstName,omitempty" yaml:"tns26:firstName,omitempty"`
	LastName  *string    `xml:"tns26:lastName,omitempty" json:"tns26:lastName,omitempty" yaml:"tns26:lastName,omitempty"`
}

// PersonNameType was auto-generated from WSDL.
type PersonNameType struct {
	OfficialName *string `xml:"tns20:officialName,omitempty" json:"tns20:officialName,omitempty" yaml:"tns20:officialName,omitempty"`
	FirstName    *string `xml:"tns20:firstName,omitempty" json:"tns20:firstName,omitempty" yaml:"tns20:firstName,omitempty"`
}

// PhoneType was auto-generated from WSDL.
type PhoneType struct {
	PhoneNumber        *string           `xml:"tns23:phoneNumber,omitempty" json:"tns23:phoneNumber,omitempty" yaml:"tns23:phoneNumber,omitempty"`
	Validity           *DateRangeType    `xml:"tns23:validity,omitempty" json:"tns23:validity,omitempty" yaml:"tns23:validity,omitempty"`
	OtherPhoneCategory *string           `xml:"tns23:otherPhoneCategory,omitempty" json:"tns23:otherPhoneCategory,omitempty" yaml:"tns23:otherPhoneCategory,omitempty"`
	PhoneCategory      PhoneCategoryType `xml:"tns23:phoneCategory" json:"tns23:phoneCategory" yaml:"tns23:phoneCategory"`
}

// ReportingRegister was auto-generated from WSDL.
type ReportingRegister struct {
	UidOrganisationIdCategorie UidOrganisationIdCategorieType `xml:"tns19:uidOrganisationIdCategorie" json:"tns19:uidOrganisationIdCategorie" yaml:"tns19:uidOrganisationIdCategorie"`
	UidOrganisationId          *uint                          `xml:"tns19:uidOrganisationId,omitempty" json:"tns19:uidOrganisationId,omitempty" yaml:"tns19:uidOrganisationId,omitempty"`
	TypeAttrXSI                string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace              string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ReportingRegister) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:reportingRegister"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.ech.ch/xmlns/eCH-0116/4"
	}
}

// SearchConfiguration was auto-generated from WSDL.
type SearchConfiguration struct {
	SearchMode                  SearchMode `xml:"tns18:searchMode" json:"tns18:searchMode" yaml:"tns18:searchMode"`
	MaxNumberOfRecords          int        `xml:"tns18:maxNumberOfRecords" json:"tns18:maxNumberOfRecords" yaml:"tns18:maxNumberOfRecords"`
	SearchNameAndAddressHistory bool       `xml:"tns18:searchNameAndAddressHistory" json:"tns18:searchNameAndAddressHistory" yaml:"tns18:searchNameAndAddressHistory"`
}

// SecurityFault was auto-generated from WSDL.
type SecurityFault struct {
	Operation     *string `xml:"tns18:operation,omitempty" json:"tns18:operation,omitempty" yaml:"tns18:operation,omitempty"`
	Error         *string `xml:"tns18:error,omitempty" json:"tns18:error,omitempty" yaml:"tns18:error,omitempty"`
	ErrorDetail   *string `xml:"tns18:errorDetail,omitempty" json:"tns18:errorDetail,omitempty" yaml:"tns18:errorDetail,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SecurityFault) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:securityFault"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.uid.admin.ch/xmlns/uid-wse-shared/2"
	}
}

// ServiceFault was auto-generated from WSDL.
type ServiceFault struct {
	Operation   *string `xml:"tns18:operation,omitempty" json:"tns18:operation,omitempty" yaml:"tns18:operation,omitempty"`
	Error       *string `xml:"tns18:error,omitempty" json:"tns18:error,omitempty" yaml:"tns18:error,omitempty"`
	ErrorDetail *string `xml:"tns18:errorDetail,omitempty" json:"tns18:errorDetail,omitempty" yaml:"tns18:errorDetail,omitempty"`
}

// UidEntityPublicSearchParameters was auto-generated from WSDL.
type UidEntityPublicSearchParameters struct {
	OrganisationName              *string                                  `xml:"tns20:organisationName,omitempty" json:"tns20:organisationName,omitempty" yaml:"tns20:organisationName,omitempty"`
	PersonName                    *PersonNameType                          `xml:"tns20:personName,omitempty" json:"tns20:personName,omitempty" yaml:"tns20:personName,omitempty"`
	Address                       *AddressSearchType                       `xml:"tns20:address,omitempty" json:"tns20:address,omitempty" yaml:"tns20:address,omitempty"`
	LegalForm                     []*string                                `xml:"tns20:legalForm,omitempty" json:"tns20:legalForm,omitempty" yaml:"tns20:legalForm,omitempty"`
	UidregInformation             *UidregInformationPublicSearchType       `xml:"tns20:uidregInformation,omitempty" json:"tns20:uidregInformation,omitempty" yaml:"tns20:uidregInformation,omitempty"`
	CommercialRegisterInformation *CommercialRegisterInformationSearchType `xml:"tns20:commercialRegisterInformation,omitempty" json:"tns20:commercialRegisterInformation,omitempty" yaml:"tns20:commercialRegisterInformation,omitempty"`
	VatRegisterInformation        *VatRegisterInformationSearchType        `xml:"tns20:vatRegisterInformation,omitempty" json:"tns20:vatRegisterInformation,omitempty" yaml:"tns20:vatRegisterInformation,omitempty"`
}

// UidEntityPublicSearchRequest was auto-generated from WSDL.
type UidEntityPublicSearchRequest struct {
	Uid                       *UidStructureType                `xml:"tns20:uid,omitempty" json:"tns20:uid,omitempty" yaml:"tns20:uid,omitempty"`
	OtherOrganisationId       *NamedOrganisationIdType         `xml:"tns20:otherOrganisationId,omitempty" json:"tns20:otherOrganisationId,omitempty" yaml:"tns20:otherOrganisationId,omitempty"`
	UidEntitySearchParameters *UidEntityPublicSearchParameters `xml:"tns20:uidEntitySearchParameters,omitempty" json:"tns20:uidEntitySearchParameters,omitempty" yaml:"tns20:uidEntitySearchParameters,omitempty"`
}

// UidEntitySearchResponse was auto-generated from WSDL.
type UidEntitySearchResponse struct {
	UidEntitySearchResultItem []*UidEntitySearchResultItem `xml:"tns20:uidEntitySearchResultItem,omitempty" json:"tns20:uidEntitySearchResultItem,omitempty" yaml:"tns20:uidEntitySearchResultItem,omitempty"`
	Extension                 *string                      `xml:"tns20:extension,omitempty" json:"tns20:extension,omitempty" yaml:"tns20:extension,omitempty"`
}

// UidEntitySearchResultItem was auto-generated from WSDL.
type UidEntitySearchResultItem struct {
	Organisation   *OrganisationType `xml:"tns20:organisation,omitempty" json:"tns20:organisation,omitempty" yaml:"tns20:organisation,omitempty"`
	Rating         int               `xml:"tns20:rating" json:"tns20:rating" yaml:"tns20:rating"`
	IsHistoryMatch bool              `xml:"tns20:isHistoryMatch" json:"tns20:isHistoryMatch" yaml:"tns20:isHistoryMatch"`
	Extension      *string           `xml:"tns20:extension,omitempty" json:"tns20:extension,omitempty" yaml:"tns20:extension,omitempty"`
}

// UidRegSourceType was auto-generated from WSDL.
type UidRegSourceType struct {
	Uid                *UidStructureType `xml:"tns17:uid,omitempty" json:"tns17:uid,omitempty" yaml:"tns17:uid,omitempty"`
	RelationType       string            `xml:"tns17:relationType" json:"tns17:relationType" yaml:"tns17:relationType"`
	RegistrationDate   Date              `xml:"tns17:registrationDate" json:"tns17:registrationDate" yaml:"tns17:registrationDate"`
	RegistrationStatus string            `xml:"tns17:registrationStatus" json:"tns17:registrationStatus" yaml:"tns17:registrationStatus"`
}

// UidStructureType was auto-generated from WSDL.
type UidStructureType struct {
	UidOrganisationIdCategorie UidOrganisationIdCategorieType `xml:"tns19:uidOrganisationIdCategorie" json:"tns19:uidOrganisationIdCategorie" yaml:"tns19:uidOrganisationIdCategorie"`
	UidOrganisationId          *uint                          `xml:"tns19:uidOrganisationId,omitempty" json:"tns19:uidOrganisationId,omitempty" yaml:"tns19:uidOrganisationId,omitempty"`
}

// UidregInformationPublicSearchType was auto-generated from WSDL.
type UidregInformationPublicSearchType struct {
	UidregStatusEnterpriseDetail *UidregStatusEnterpriseDetailType `xml:"tns20:uidregStatusEnterpriseDetail,omitempty" json:"tns20:uidregStatusEnterpriseDetail,omitempty" yaml:"tns20:uidregStatusEnterpriseDetail,omitempty"`
	UidregUidService             *bool                             `xml:"tns20:uidregUidService,omitempty" json:"tns20:uidregUidService,omitempty" yaml:"tns20:uidregUidService,omitempty"`
}

// UidregInformationType was auto-generated from WSDL.
type UidregInformationType struct {
	UidregStatusEnterpriseDetail *UidregStatusEnterpriseDetailType `xml:"tns17:uidregStatusEnterpriseDetail,omitempty" json:"tns17:uidregStatusEnterpriseDetail,omitempty" yaml:"tns17:uidregStatusEnterpriseDetail,omitempty"`
	UidregPublicStatus           *UidregPublicStatusType           `xml:"tns17:uidregPublicStatus,omitempty" json:"tns17:uidregPublicStatus,omitempty" yaml:"tns17:uidregPublicStatus,omitempty"`
	UidregOrganisationType       *UidregOrganisationTypeType       `xml:"tns17:uidregOrganisationType,omitempty" json:"tns17:uidregOrganisationType,omitempty" yaml:"tns17:uidregOrganisationType,omitempty"`
	UidregLiquidationReason      *UidregLiquidationReasonType      `xml:"tns17:uidregLiquidationReason,omitempty" json:"tns17:uidregLiquidationReason,omitempty" yaml:"tns17:uidregLiquidationReason,omitempty"`
	UidregSource                 []*UidRegSourceType               `xml:"tns17:uidregSource,omitempty" json:"tns17:uidregSource,omitempty" yaml:"tns17:uidregSource,omitempty"`
	UidReplacement               *UidStructureType                 `xml:"tns17:uidReplacement,omitempty" json:"tns17:uidReplacement,omitempty" yaml:"tns17:uidReplacement,omitempty"`
	UidregUidService             *bool                             `xml:"tns17:uidregUidService,omitempty" json:"tns17:uidregUidService,omitempty" yaml:"tns17:uidregUidService,omitempty"`
	UidregTranslation            *string                           `xml:"tns17:uidregTranslation,omitempty" json:"tns17:uidregTranslation,omitempty" yaml:"tns17:uidregTranslation,omitempty"`
}

// VatRegisterInformationSearchType was auto-generated from WSDL.
type VatRegisterInformationSearchType struct {
	VatStatus          *VatStatusType      `xml:"tns20:vatStatus,omitempty" json:"tns20:vatStatus,omitempty" yaml:"tns20:vatStatus,omitempty"`
	VatEntryStatus     *VatEntryStatusType `xml:"tns20:vatEntryStatus,omitempty" json:"tns20:vatEntryStatus,omitempty" yaml:"tns20:vatEntryStatus,omitempty"`
	VatEntryDate       *Date               `xml:"tns20:vatEntryDate,omitempty" json:"tns20:vatEntryDate,omitempty" yaml:"tns20:vatEntryDate,omitempty"`
	VatLiquidationDate *Date               `xml:"tns20:vatLiquidationDate,omitempty" json:"tns20:vatLiquidationDate,omitempty" yaml:"tns20:vatLiquidationDate,omitempty"`
	UidVat             *UidStructureType   `xml:"tns20:uidVat,omitempty" json:"tns20:uidVat,omitempty" yaml:"tns20:uidVat,omitempty"`
}

// VatRegisterInformationType was auto-generated from WSDL.
type VatRegisterInformationType struct {
	VatStatus          VatStatusType       `xml:"tns17:vatStatus" json:"tns17:vatStatus" yaml:"tns17:vatStatus"`
	VatEntryStatus     *VatEntryStatusType `xml:"tns17:vatEntryStatus,omitempty" json:"tns17:vatEntryStatus,omitempty" yaml:"tns17:vatEntryStatus,omitempty"`
	VatEntryDate       *Date               `xml:"tns17:vatEntryDate,omitempty" json:"tns17:vatEntryDate,omitempty" yaml:"tns17:vatEntryDate,omitempty"`
	VatLiquidationDate *Date               `xml:"tns17:vatLiquidationDate,omitempty" json:"tns17:vatLiquidationDate,omitempty" yaml:"tns17:vatLiquidationDate,omitempty"`
	UidVat             *UidStructureType   `xml:"tns17:uidVat,omitempty" json:"tns17:uidVat,omitempty" yaml:"tns17:uidVat,omitempty"`
}

// Operation wrapper for GetByUID.
// OperationIPublicServices_GetByUID_InputMessage was auto-generated
// from WSDL.
type OperationIPublicServices_GetByUID_InputMessage struct {
	GetByUID *GetByUID `xml:"GetByUID,omitempty" json:"GetByUID,omitempty" yaml:"GetByUID,omitempty"`
}

// Operation wrapper for GetByUID.
// OperationIPublicServices_GetByUID_OutputMessage was auto-generated
// from WSDL.
type OperationIPublicServices_GetByUID_OutputMessage struct {
	GetByUIDResponse *GetByUIDResponse `xml:"GetByUIDResponse,omitempty" json:"GetByUIDResponse,omitempty" yaml:"GetByUIDResponse,omitempty"`
}

// Operation wrapper for GetOrganisationSample.
// OperationIPublicServices_GetOrganisationSample_InputMessage
// was auto-generated from WSDL.
type OperationIPublicServices_GetOrganisationSample_InputMessage struct {
	GetOrganisationSample *GetOrganisationSample `xml:"GetOrganisationSample,omitempty" json:"GetOrganisationSample,omitempty" yaml:"GetOrganisationSample,omitempty"`
}

// Operation wrapper for GetOrganisationSample.
// OperationIPublicServices_GetOrganisationSample_OutputMessage
// was auto-generated from WSDL.
type OperationIPublicServices_GetOrganisationSample_OutputMessage struct {
	GetOrganisationSampleResponse *GetOrganisationSampleResponse `xml:"GetOrganisationSampleResponse,omitempty" json:"GetOrganisationSampleResponse,omitempty" yaml:"GetOrganisationSampleResponse,omitempty"`
}

// Operation wrapper for Search.
// OperationIPublicServices_Search_InputMessage was auto-generated
// from WSDL.
type OperationIPublicServices_Search_InputMessage struct {
	Search *Search `xml:"Search,omitempty" json:"Search,omitempty" yaml:"Search,omitempty"`
}

// Operation wrapper for Search.
// OperationIPublicServices_Search_OutputMessage was auto-generated
// from WSDL.
type OperationIPublicServices_Search_OutputMessage struct {
	SearchResponse *SearchResponse `xml:"SearchResponse,omitempty" json:"SearchResponse,omitempty" yaml:"SearchResponse,omitempty"`
}

// Operation wrapper for ValidateUID.
// OperationIPublicServices_ValidateUID_InputMessage was auto-generated
// from WSDL.
type OperationIPublicServices_ValidateUID_InputMessage struct {
	ValidateUID *ValidateUID `xml:"ValidateUID,omitempty" json:"ValidateUID,omitempty" yaml:"ValidateUID,omitempty"`
}

// Operation wrapper for ValidateUID.
// OperationIPublicServices_ValidateUID_OutputMessage was auto-generated
// from WSDL.
type OperationIPublicServices_ValidateUID_OutputMessage struct {
	ValidateUIDResponse *ValidateUIDResponse `xml:"ValidateUIDResponse,omitempty" json:"ValidateUIDResponse,omitempty" yaml:"ValidateUIDResponse,omitempty"`
}

// Operation wrapper for ValidateVatNumber.
// OperationIPublicServices_ValidateVatNumber_InputMessage was
// auto-generated from WSDL.
type OperationIPublicServices_ValidateVatNumber_InputMessage struct {
	ValidateVatNumber *ValidateVatNumber `xml:"ValidateVatNumber,omitempty" json:"ValidateVatNumber,omitempty" yaml:"ValidateVatNumber,omitempty"`
}

// Operation wrapper for ValidateVatNumber.
// OperationIPublicServices_ValidateVatNumber_OutputMessage was
// auto-generated from WSDL.
type OperationIPublicServices_ValidateVatNumber_OutputMessage struct {
	ValidateVatNumberResponse *ValidateVatNumberResponse `xml:"ValidateVatNumberResponse,omitempty" json:"ValidateVatNumberResponse,omitempty" yaml:"ValidateVatNumberResponse,omitempty"`
}

// iPublicServices implements the IPublicServices interface.
type iPublicServices struct {
	cli *soap.Client
}

// <summary>             Get the core data (Kernmerkmale) of a
// UID entity by its UID              </summary>
// <param name="uid">UID of requested UID entity</param>
//
//	<returns>The requested UID entity</returns>
func (p *iPublicServices) GetByUID(GetByUID *GetByUID) (*GetByUIDResponse, error) {
	α := struct {
		OperationIPublicServices_GetByUID_InputMessage `xml:"tns:GetByUID"`
	}{
		OperationIPublicServices_GetByUID_InputMessage{
			GetByUID,
		},
	}

	γ := struct {
		OperationIPublicServices_GetByUID_OutputMessage `xml:"GetByUIDResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/GetByUID", α, &γ); err != nil {
		return nil, err
	}
	return γ.GetByUIDResponse, nil
}

// <summary>             Returns a data sample to demonstrate
// the structure of eCH-0108:organisationType. The sample contains
// all mapped fields. All data is fictional.              </summary>
//
//	<returns>Data sample</returns>
func (p *iPublicServices) GetOrganisationSample(GetOrganisationSample *GetOrganisationSample) (*GetOrganisationSampleResponse, error) {
	α := struct {
		OperationIPublicServices_GetOrganisationSample_InputMessage `xml:"tns:GetOrganisationSample"`
	}{
		OperationIPublicServices_GetOrganisationSample_InputMessage{
			GetOrganisationSample,
		},
	}

	γ := struct {
		OperationIPublicServices_GetOrganisationSample_OutputMessage `xml:"GetOrganisationSampleResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/GetOrganisationSample", α, &γ); err != nil {
		return nil, err
	}
	return γ.GetOrganisationSampleResponse, nil
}

// <summary>             Search for UID-Einheiten
//
//	</summary>             <param name="searchParameters">Search
//
// parameters formated as eCH-0108-3-0f document</param>
//
//	<param name="config">Configuration parameters to customize
//
// search behaviour</param>             <returns>XML-Document
// of type uid-wse</returns>
func (p *iPublicServices) Search(Search *Search) (*SearchResponse, error) {
	α := struct {
		OperationIPublicServices_Search_InputMessage `xml:"tns:Search"`
	}{
		OperationIPublicServices_Search_InputMessage{
			Search,
		},
	}

	γ := struct {
		OperationIPublicServices_Search_OutputMessage `xml:"SearchResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/Search", α, &γ); err != nil {
		return nil, err
	}
	return γ.SearchResponse, nil
}

// <summary>             Validate a UID              </summary>
//
//	<param name="uid">UID to validate. Accepted format:
//
// 'CHE123456789' or 'CHE-123.456.789'</param>             <returns>true
// if the UID exists in the UID register</returns>
func (p *iPublicServices) ValidateUID(ValidateUID *ValidateUID) (*ValidateUIDResponse, error) {
	α := struct {
		OperationIPublicServices_ValidateUID_InputMessage `xml:"tns:ValidateUID"`
	}{
		OperationIPublicServices_ValidateUID_InputMessage{
			ValidateUID,
		},
	}

	γ := struct {
		OperationIPublicServices_ValidateUID_OutputMessage `xml:"ValidateUIDResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/ValidateUID", α, &γ); err != nil {
		return nil, err
	}
	return γ.ValidateUIDResponse, nil
}

// <summary>             Validate a VatNumber              </summary>
//
//	<param name="vatNumber">VAT number to validate</param>
//	<returns>true if exists</returns>
func (p *iPublicServices) ValidateVatNumber(ValidateVatNumber *ValidateVatNumber) (*ValidateVatNumberResponse, error) {
	α := struct {
		OperationIPublicServices_ValidateVatNumber_InputMessage `xml:"tns:ValidateVatNumber"`
	}{
		OperationIPublicServices_ValidateVatNumber_InputMessage{
			ValidateVatNumber,
		},
	}

	γ := struct {
		OperationIPublicServices_ValidateVatNumber_OutputMessage `xml:"ValidateVatNumberResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/ValidateVatNumber", α, &γ); err != nil {
		return nil, err
	}
	return γ.ValidateVatNumberResponse, nil
}
